"""
–°—Ç–∞—Ä—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –±–æ—Ç–∞
"""
import logging
from datetime import datetime

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
from aiogram.utils.keyboard import InlineKeyboardBuilder

from config.texts import (
    START_MESSAGE, 
    REMEMBER_VIKA_MESSAGE, 
    DONT_REMEMBER_VIKA_MESSAGE,
    START_BUTTONS
)
from handlers.utils import is_archive_mode, save_user_choice, add_user

router = Router()
logger = logging.getLogger(__name__)


@router.message(CommandStart())
async def cmd_start(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    try:
        user_id = message.from_user.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
        if is_archive_mode():
            await message.answer("üì¶ –ë–æ—Ç –≤ –∞—Ä—Ö–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ. –î–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.")
            return
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        builder = InlineKeyboardBuilder()
        for row in START_BUTTONS:
            for button_text in row:
                if button_text == "‚úÖ –î–∞, –∫–æ–Ω–µ—á–Ω–æ!":
                    builder.button(text=button_text, callback_data="remember_vika")
                elif button_text == "‚ùå –ù–µ—Ç, –Ω–µ –ø–æ–º–Ω—é":
                    builder.button(text=button_text, callback_data="dont_remember_vika")
        
        builder.adjust(2)
        
        await message.answer(
            START_MESSAGE,
            reply_markup=builder.as_markup()
        )
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ cmd_start: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


@router.callback_query(F.data == "remember_vika")
async def remember_vika(callback: CallbackQuery):
    """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–º–Ω–∏—Ç –í–∏–∫—É"""
    try:
        user_id = callback.from_user.id
        user = callback.from_user
        
        # –î–æ–±–∞–≤–ª—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        await add_user(
            user_id=user_id,
            username=user.username,
            first_name=user.first_name,
            last_name=user.last_name
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await save_user_choice(user_id, True)
        
        # –°—á–µ—Ç—á–∏–∫ –≥–æ—Å—Ç–µ–π —Ç–µ–ø–µ—Ä—å –Ω–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        # –ù—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–Ø –±—É–¥—É!" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
        from handlers.menu import show_main_menu
        from handlers.utils import get_start_photo
        
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ "–¥–∞"
        file_id, caption = await get_start_photo("yes")
        
        if file_id:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
            await callback.message.delete()
            sent_message = await callback.message.answer_photo(
                photo=file_id,
                caption=caption or REMEMBER_VIKA_MESSAGE
            )
            await show_main_menu(sent_message, user_id)
        else:
            # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
            await callback.message.edit_text(REMEMBER_VIKA_MESSAGE)
            await show_main_menu(callback.message, user_id)
        
        await callback.answer()
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–º–Ω–∏—Ç –í–∏–∫—É")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ remember_vika: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)


@router.callback_query(F.data == "dont_remember_vika")
async def dont_remember_vika(callback: CallbackQuery):
    """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–º–Ω–∏—Ç –í–∏–∫—É"""
    try:
        user_id = callback.from_user.id
        user = callback.from_user
        
        # –î–æ–±–∞–≤–ª—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        await add_user(
            user_id=user_id,
            username=user.username,
            first_name=user.first_name,
            last_name=user.last_name
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await save_user_choice(user_id, False)
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
        from handlers.menu import show_main_menu
        from handlers.utils import get_start_photo
        
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ "–Ω–µ—Ç"
        file_id, caption = await get_start_photo("no")
        
        if file_id:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
            await callback.message.delete()
            sent_message = await callback.message.answer_photo(
                photo=file_id,
                caption=caption or DONT_REMEMBER_VIKA_MESSAGE
            )
            await show_main_menu(sent_message, user_id)
        else:
            # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
            await callback.message.edit_text(DONT_REMEMBER_VIKA_MESSAGE)
            await show_main_menu(callback.message, user_id)
        
        await callback.answer()
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –ø–æ–º–Ω–∏–ª –í–∏–∫—É")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ dont_remember_vika: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

